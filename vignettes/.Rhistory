list.files(path)
list.files(file.path(path, html))
list.files(file.path(path, "html"))
list.files(file.path(path, "doc"))
list.files(file.path(path, "Meta"))
list.files(file.path(path, "tests"))
list.files(path, rec=TRUE)
require(Gread)
require(gread)
vignette("gread-vignette", package="gread")
?readGFF
GFFcolnames()
require(rtracklayer)
GFFcolnames()
GFFcolnames(GFF1=TRUE)
GFFcolnames(GFF2=TRUE)
?GFFcolnames
?readGFF
?read_format
path = system.file("vignetes", package="gread")
gtf_file = file.path(path, "sample.gtf")
ans = readGFF(gtf_file)
require(gread)
?read_format
path = system.file("vignetes", package="gread")
path
path = system.file("tests", package="gread")
path
gtf_file = file.path(path, "sample.gtf")
gtf_file
readGFF(gtf_file)
rtracklayer::readGFF(gtf_file)
list.files()
gtf_file
fread(gtf_file)
require(data.table)
fread(gtf_file)
path
list.files(path)
require(gff)
require(gread)
?read_format
path = system.file("tests", package="gread")
gtf_file = file.path(path, "sample.gtf")
gtf_file
require(data.table)
fread(gtf_file)
rtracklayer::readGFF(gtf_file)
?readGFF
ans = readGFF(file.path(path, "sample.gff"))
ans1 = rtracklayer::readGFF(file.path(path, "sample.gff"))
ans2 = rtracklayer::readGFF(file.path(path, "sample.gtf"))
setDT(ans1)
setDT(ans2)
ans1
ans2
ans2 = rtracklayer::readGFF(file.path(path, "sample.gtf"), tags=c("gene_id"))
head(ans2)
ans2 = rtracklayer::readGFF(file.path(path, "sample.gtf"), version=2)
head(ans2)
require(gread)
require(gread)
?read_format
path = system.file("tests", package="gread")
gtf_file = file.path(path, "sample.gtf")
rtracklayer::readGFF(gtf_file)
?readGFF
path = system.file("tests", package="gread")
gtf_file = file.path(path, "sample.gtf", columns=GFFcolnames())
path = system.file("tests", package="gread")
gtf_file = file.path(path, "sample.gtf", columns=rtracklayer::GFFcolnames())
head(gtf_file)
rtracklayer::GFFcolnames()
path = system.file("tests", package="gread")
gtf_file = file.path(path, "sample.gtf", columns="seqid")
head(gtf_file)
head(readGFF(gtf_file, version=2))
head(rtracklayer::readGFF(gtf_file, version=2))
head(gtf_file)
gtf_file = "/Library/Frameworks/R.framework/Versions/3.2/Resources/library/gread/tests/sample.gtf"
head(rtracklayer::readGFF(gtf_file, version=2))
class(head(rtracklayer::readGFF(gtf_file, version=2)))
debugonce(gread:::gread.gtf_format)
read_format(gtf_file)
token
tryCatch(foo(2, 3), error = function(o) tryCatch(bar(2,3), error = function(o) stop("still errored"))
tryCatch(foo(2, 3), error = function(o) tryCatch(bar(2,3), error = function(o) stop("still errored")))
foo <- function(x,y) x+y>10
bat <- foo
bar <- foo
tryCatch(foo(2, 3), error = function(o) tryCatch(bar(2,3), error = function(o) stop("still errored")))
foo <- function(x,y) if (!(x+y>10)) stop("bla")
bar <- foo
tryCatch(foo(2, 3), error = function(o) tryCatch(bar(2,3), error = function(o) stop("still errored")))
head(rtracklayer::readGFF(gtf_file, version=2))
?readGFF
require(rtracklayer)
readGFF(gtf_file, version=2, columns=GFFcolnames())
ans = readGFF(gtf_file, version=2, columns=GFFcolnames())
setDT(ans)
require(data.table)
ans
ans = readGFF(gtf_file, version=2, columns=GFFcolnames(), tags=NULL)
ans
ans = readGFF(gtf_file, version=2, columns=GFFcolnames(), tags=NA)
names(readGFF(gtf_file, version=2, columns=GFFcolnames(), tags=NULL))
names(readGFF(gtf_file, version=2, tags=NULL))
tail(names(ans), -9L)
names(ans)
ans = readGFF(gtf_file, version=2, columns=NULL, tags=NA)
ans = readGFF(gtf_file, version=2, columns=NULL, tags=NULL)
names(ans)
gtf = read_format("sample.gtf")
require(gread)
gtf = read_format("sample.gtf")
gtf
(exons = extract(gtf, feature="exon", genre="exon", type="union",
transcript_id="transcript_id", gene_id="gene_id"))
class(gtf$feature)
dt_deps()
gtf = read_format("sample.gtf", tidy=FALSE)
gtf
gtf = read_format("sample.gtf")
gtf
require(rtracklayer)
gtf = setDT(readGFF("sample.gtf", columns = GFFcolnames()))
gtf
require(gread)
?read_format
path = system.file("tests", package="gread")
gtf_file = file.path(path, "sample.gtf")
read_format(gtf_file, tidy=FALSE)
require(gread)
path = system.file("tests", package="gread")
gtf_file = file.path(path, "sample.gtf")
gtf_file
read_format(gtf_file)
ans = setDT(rtracklayer::readGFF(gtf_file, version=2L,
columns=if (FALSE) rtracklayer::GFFcolnames()))
require(data.table)
ans = setDT(rtracklayer::readGFF(gtf_file, version=2L,
columns=if (FALSE) rtracklayer::GFFcolnames()))
ans
ans = setDT(rtracklayer::readGFF(gtf_file, version=2L,
columns=if (TRUE) rtracklayer::GFFcolnames()))
ans
debugonce(gread:::gread.gtf_format)
read_format(gtf_file, tidy=FALSE)
ans
names(ans)
read_format(gtf_file, tidy=TRUE)
debugonce(gread:::gread.gtf_format)
read_format(gtf_file, tidy=TRUE)
ans
token$names
ans
debugonce(tidy.gtf)
x
remove_cols
remove_cols
setDT(readGFF(gtf_file, version=2L))
require(datat.able)
require(data.table)
require(rtracklayer)
setDT(readGFF(gtf_file, version=2L))
setDT(readGFF(gtf_file, version=2L))[]
setDT(rtracklayer::readGFF(gtf_file, version=2L, columns=if (TRUE) rtracklayer::GFFcolnames()))
setDT(rtracklayer::readGFF(gtf_file, version=2L, columns=if (TRUE) rtracklayer::GFFcolnames()))[]
setDT(rtracklayer::readGFF(gtf_file, version=2L)[]
setDT(rtracklayer::readGFF(gtf_file, version=2L))[]
setDT(rtracklayer::readGFF(gtf_file, version=2L))[]
require(gread)
path = system.file("tests", package="gread")
gtf_file = file.path(path, "sample.gtf")
read_format(gtf_file)
require(gread)
path = system.file("tests", package="gread")
gtf_file = file.path(path, "sample.gtf")
read_format(gtf_file)
debugonce(gread:::gread.gtf_format)
read_format(gtf_file)
ans
debugonce(tidy.gtf)
names(x)
format_names("gtf")
require(gread)
path = system.file("tests", package="gread")
gtf_file = file.path(path, "sample.gtf")
read_format(gtf_file)
require(gread)
path = system.file("tests", package="gread")
gtf_file = file.path(path, "sample.gtf")
read_format(gtf_file, tidy=FALSE)
require(gread)
path = system.file("tests", package="gread")
gtf_file = file.path(path, "sample.gtf")
read_format(gtf_file, tidy=FALSE)
require(gread)
path = system.file("tests", package="gread")
gtf_file = file.path(path, "sample.gtf")
read_format(gtf_file, tidy=TRUE)
require(gread)
path = system.file("tests", package="gread")
gtf_file = file.path(path, "sample.gtf")
read_format(gtf_file, tidy=TRUE)
require(gread)
gtf = read_format("sample.gtf")
gtf
(exons = extract(gtf, feature="exon", genre="exon", type="union",
transcript_id="transcript_id", gene_id="gene_id"))
str(gtf)
head(rtracklayer::readGFF("sample.gtf", version=2L))
head(rtracklayer::readGFF("sample.gtf", version=2L))
require(gread)
path = system.file("tests", package="gread")
gtf_file = file.path(path, "sample.gtf")
read_format(gtf_file, tidy=TRUE)
gtf = read_format("sample.gtf")
gtf
str(gtf)
gtf = read_format("sample.gtf", tidy=FALSE)
str(gtf)
require(gread)
gtf = read_format("sample.gtf", tidy=FALSE)
gtf
str(Gtf)
str(gtf)
require(gread)
gtf = read_format("sample.gtf")
str(gtf)
read_format("sample.bam")
read_format("sample.bed")
format_names("bed")
gread:::format_names("bed")
require(gread)
gtf = read_format("sample.bed")
require(gread)
gtf = read_format("sample.bed")
gtf
bla = ""
bla = bla[!bla %in% names(gtf)]
bla
length(bla)
path = system.file("tests", package="gread")
gtf_file = file.path(path, "sample.gtf")
gff_file = file.path(path, "sample.gff")
bed_file = file.path(path, "sample.bed")
bam_file = file.path(path, "sample.bam")
read_format(gtf_file)
path = system.file("tests", package="gread")
gtf_file = file.path(path, "sample.gtf")
gff_file = file.path(path, "sample.gff")
bed_file = file.path(path, "sample.bed")
bam_file = file.path(path, "sample.bam")
read_format(gtf_file)
require(gread)
read_format(gtf_file)
ans=read_format(gtf_file)
dput(ans)
gtf_ans = data.table(seqname="1",
source="protein_coding",
feature=c("exon","stop_codon","exon"),
start=c(34554L,35138L,35141L),
end=c(35174L,35140L,35174L),
score=NA_real_,
strand="-",
frame=c(NA,0L,1L),
gene_id="ENSG00000237613",
transcript_id="ENST00000417324",
exon_number="3",
gene_biotype="protein_coding"
gene_name="FAM138A",
p_id="P60162",
transcript_name="FAM138A-001",
tss_id="TSS132128",
protein_id=c(NA,NA,"ENSP00000409362"))
gtf_ans = data.table(seqname="1",
source="protein_coding",
feature=c("exon","stop_codon","exon"),
start=c(34554L,35138L,35141L),
end=c(35174L,35140L,35174L),
score=NA_real_,
strand="-",
frame=c(NA,0L,1L),
gene_id="ENSG00000237613",
transcript_id="ENST00000417324",
exon_number="3",
gene_biotype="protein_coding",
gene_name="FAM138A",
p_id="P60162",
transcript_name="FAM138A-001",
tss_id="TSS132128",
protein_id=c(NA,NA,"ENSP00000409362"))
require(data.table)
gtf_ans = data.table(seqname="1",
source="protein_coding",
feature=c("exon","stop_codon","exon"),
start=c(34554L,35138L,35141L),
end=c(35174L,35140L,35174L),
score=NA_real_,
strand="-",
frame=c(NA,0L,1L),
gene_id="ENSG00000237613",
transcript_id="ENST00000417324",
exon_number="3",
gene_biotype="protein_coding",
gene_name="FAM138A",
p_id="P60162",
transcript_name="FAM138A-001",
tss_id="TSS132128",
protein_id=c(NA,NA,"ENSP00000409362"))
gtf_ans
ans=read_format(gff_file)
ans
dput(ans)
ans=read_format(bam_file)
ans
dput(ans)
ans=read_format(bed_file)
ans
dput(ans)
?read_gtf
require(gread)
test_gread()
require(data.table)
test_gread()
tgread
tgread()
tgread()
gread:::is_gread
tgread()
tgread()
?read_format
path = system.file("tests", package="gread")
gtf_file = file.path(path, "sample.gtf")
gff_file = file.path(path, "sample.gff")
bed_file = file.path(path, "sample.bed")
bam_file = file.path(path, "sample.bam")
gtf_ans = data.table(seqname="1",
source="protein_coding",
feature=c("exon","stop_codon","exon"),
start=c(34554L,35138L,35141L),
end=c(35174L,35140L,35174L),
score=NA_real_,
strand="-",
frame=c(NA,0L,1L),
gene_id="ENSG00000237613",
transcript_id="ENST00000417324",
exon_number="3",
gene_biotype="protein_coding",
gene_name="FAM138A",
p_id="P60162",
transcript_name="FAM138A-001",
tss_id="TSS132128",
protein_id=c(NA,NA,"ENSP00000409362"))
setattr(gtf_ans, 'class', c('gtf', class(gtf_ans)))
identical(read_format(gtf_file), gtf_ans)
identical(a1 <- read_format(gtf_file), a2 <- gtf_ans)
a1
a2
all.equal(a1,a2)
attributes(a1)
path = system.file("tests", package="gread")
gtf_file = file.path(path, "sample.gtf")
gff_file = file.path(path, "sample.gff")
bed_file = file.path(path, "sample.bed")
bam_file = file.path(path, "sample.bam")
require(gread)
gtf_ans = data.table(seqname="1",
source="protein_coding",
feature=c("exon","stop_codon","exon"),
start=c(34554L,35138L,35141L),
end=c(35174L,35140L,35174L),
score=NA_real_,
strand="-",
frame=c(NA,0L,1L),
gene_id="ENSG00000237613",
transcript_id="ENST00000417324",
exon_number="3",
gene_biotype="protein_coding",
gene_name="FAM138A",
p_id="P60162",
transcript_name="FAM138A-001",
tss_id="TSS132128",
protein_id=c(NA,NA,"ENSP00000409362"))
setattr(gtf_ans, 'class', c('gtf', class(gtf_ans)))
require(data.table)
gtf_ans = data.table(seqname="1",
source="protein_coding",
feature=c("exon","stop_codon","exon"),
start=c(34554L,35138L,35141L),
end=c(35174L,35140L,35174L),
score=NA_real_,
strand="-",
frame=c(NA,0L,1L),
gene_id="ENSG00000237613",
transcript_id="ENST00000417324",
exon_number="3",
gene_biotype="protein_coding",
gene_name="FAM138A",
p_id="P60162",
transcript_name="FAM138A-001",
tss_id="TSS132128",
protein_id=c(NA,NA,"ENSP00000409362"))
setattr(gtf_ans, 'class', c('gtf', class(gtf_ans)))
all.equal(a1,a2)
identical(read_format(gtf_file), gtf_ans)
all.equal(read_format(gtf_file), gtf_ans)
identical(a1 <- read_format(gtf_file), a2 <- gtf_ans)
a1
a2
read_format(gff_file)
tgread()
tgread()
tgread()
?read_format
path = system.file("tests", package="gread")
gtf_filter_file = file.path(path, "sample_filter.gtf")
read_format(gff_file, filter=TRUE)
read_format(gtf_file, filter=TRUE)
read_format(gtf_filter_file, filter=TRUE)
?read_gtf
read_format("../inst/tests/sample_filter.gtf", filter=TRUE)
gtf_ans = data.table(seqname="1",
source="protein_coding",
feature=c("exon","stop_codon","CDS"),
start=c(34554L,35138L,35141L),
end=c(35174L,35140L,35174L),
score=NA_real_,
strand="-",
frame=c(NA,0L,1L),
gene_id="ENSG00000237613",
transcript_id="ENST00000417324",
exon_number="3",
gene_biotype="protein_coding",
gene_name="FAM138A",
p_id="P60162",
transcript_name="FAM138A-001",
tss_id="TSS132128",
protein_id=c(NA,NA,"ENSP00000409362"))
gtf_ans
read_format("../inst/tests/sample_filter.gtf", filter=TRUE)
read_format("../inst/tests/sample_filter.gff", filter=TRUE)
gff_ans = data.table(seqname="1",
source="protein_coding",
feature=c("gene","RNA","exon"),
start=c(34554L,34554L,34554L),
end=c(36081L,36081L,35174L),
score=".",
strand="-",
phase=".",
Alias=c("ENSG00000237613",NA,NA),
ID=c("ENSG00000237613","RNA:ENST00000417324","exon:ENST00000417324.3"),
Name=c("FAM138A","FAM138A-001",NA),
Parent=c(NA,"gene:ENSG00000237613","protein_coding:ENST00000417324"),
length=c("1528",NA,NA))
setattr(gff_ans, 'class', c('gff', class(gff_ans)))
gff_ans
tgread()
path = system.file("tests", package="gread")
tgread()
path = system.file("tests", package="gread")
gtf_filter_file = file.path(path, "sample_filter.gtf")
gff_filter_file = file.path(path, "sample_filter.gff")
read_format("sample_filter.gtf", filter=TRUE)
path
list.files(path)
read_format(gtf_filter_file, filter=TRUE)
gtf_ans = data.table(seqname="1",
source="protein_coding",
feature=c("exon","stop_codon","CDS"),
start=c(34554L,35138L,35141L),
end=c(35174L,35140L,35174L),
score=NA_real_,
strand="-",
frame=c(NA,0L,1L),
gene_id="ENSG00000237613",
transcript_id="ENST00000417324",
exon_number="3",
gene_biotype="protein_coding",
gene_name="FAM138A",
p_id="P60162",
transcript_name="FAM138A-001",
tss_id="TSS132128",
protein_id=c(NA,NA,"ENSP00000409362"))
setattr(gtf_ans, 'class', c('gtf', class(gtf_ans)))
gtf_ans[1]
read_format(gtf_filter_file, filter=TRUE)
all.equal(read_format(gtf_filter_file, filter=TRUE), gtf_ans[1L])
read_gtf("sample_filter.gtf", filter=TRUE)
read_gtf(gtf_filter_file, filter=TRUE)
all.equal(read_gtf(gtf_filter_file, filter=TRUE), gtf_ans[1L])
read_gff(gff_filter_file, filter=TRUE)
gff_ans = data.table(seqname="1",
source="protein_coding",
feature=c("gene","RNA","exon"),
start=c(34554L,34554L,34554L),
end=c(36081L,36081L,35174L),
score=".",
strand="-",
phase=".",
Alias=c("ENSG00000237613",NA,NA),
ID=c("ENSG00000237613","RNA:ENST00000417324","exon:ENST00000417324.3"),
Name=c("FAM138A","FAM138A-001",NA),
Parent=c(NA,"gene:ENSG00000237613","protein_coding:ENST00000417324"),
length=c("1528",NA,NA))
setattr(gff_ans, 'class', c('gff', class(gff_ans)))
gff_ans
read_gff(gff_filter_file, filter=TRUE)
tgread()
tgread()
ccgread()
